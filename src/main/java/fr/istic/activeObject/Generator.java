package fr.istic.activeObject;


import fr.istic.gestion.Strategy;
import fr.istic.observer.ObserverGeneratorAsync;

import java.util.List;

public class Generator implements GeneratorAsync {

    private Integer value;
    private List<ObserverGeneratorAsync> observers;


    private Strategy strategy;


    public List<ObserverGeneratorAsync> getObservers() {
        return observers;
    }

    public void setObservers(List<ObserverGeneratorAsync> observers) {
        this.observers = observers;
    }

    public void setValue(Integer value) {
        this.value = value;
    }

    public Strategy getStrategy() {
        return strategy;
    }

    public void setStrategy(Strategy strategy) {
        this.strategy = strategy;
    }

    /**
     * get the value generated by this class
     * @return value
     */
    @Override
    public Integer getValue() {


        return value;

    }

    /**
     * Generate a random value and notify the observers
     *
     */

    public void createvalue() {
        this.value= (int)(Math.random() * 100);
        //update();
        execute();
    }

    /**
     * add an observer
     * @param o observer to add
     */

    @Override
    public void add(ObserverGeneratorAsync o) {
        if(!observers.contains(o))
            observers.add(o);

    }

    /**
     * delete an observer
     * @param o observer to be deleted
     */
    @Override
    public void delete(ObserverGeneratorAsync o) {
        observers.remove(o);
    }


    @Override
    public void execute() {
        strategy.execute();


    }
}
